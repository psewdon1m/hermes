services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - ":80"
    depends_on:
      - api
    networks:
      - app-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - ":3001"
    environment:
      - NODE_ENV=
      - PORT=3001
      - REDIS_URL=
      - API_ORIGIN=
      - WS_PUBLIC=
      - JWT_SECRET=
      - TURN_DOMAIN=
      - TURN_SECRET=
      - TURN_TTL_SECONDS=
      - JOIN_TOKEN_TTL_SECONDS=
    depends_on:
      - redis
    networks:
      - app-network

  signal:
    build:
      context: ./signal
      dockerfile: Dockerfile
    ports:
      - ":3002"
    environment:
      - NODE_ENV=
      - PORT=3002
      - SIGNAL_PATH=
      - REDIS_URL=
      - JWT_SECRET=
      - MAX_PEERS_PER_CALL=
      - INACTIVE_TTL_SECONDS=
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - ":6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  coturn:
    image: coturn/coturn:latest
    ports:
      - ":3478"
      - ":3478/udp"
      - ":5349"
    environment:
      - TURN_USERNAME=
      - TURN_PASSWORD=
      - TURN_REALM=
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - ":80"
      - ":443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/snippets:/etc/nginx/snippets
      - ./nginx/fastcgi.conf:/etc/nginx/fastcgi.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - api
      - signal
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
