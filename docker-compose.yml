services:
  # Frontend (React SPA)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - api
    networks:
      - app-network

  # API Service
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3001
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DOMAIN=${DOMAIN:-tgcall.us}
      - JWT_SECRET=${JWT_SECRET:-default-secret}
      - TURN_SECRET=${TURN_SECRET:-default-turn-secret}
      - TURN_DOMAIN=${TURN_DOMAIN:-tgcall.us}
    depends_on:
      - redis
    networks:
      - app-network

  # Signal Service (WebSocket)
  signal:
    build:
      context: ./services/signal
      dockerfile: Dockerfile
    ports:
      - "${SIGNAL_PORT:-3002}:3002"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3002
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JWT_SECRET=${JWT_SECRET:-default-secret}
      - MAX_PEERS_PER_CALL=${MAX_PEERS_PER_CALL:-2}
      - INACTIVE_TTL_SECONDS=${INACTIVE_TTL_SECONDS:-3600}
    depends_on:
      - redis
    networks:
      - app-network

  # Redis для хранения состояния звонков
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # TURN/STUN сервер
  coturn:
    image: coturn/coturn:latest
    ports:
      - "${TURN_UDP_PORT:-3478}:3478"
      - "${TURN_UDP_PORT:-3478}:3478/udp"
      - "${TURN_TLS_PORT:-5349}:5349"
    environment:
      - TURN_USERNAME=${TURN_USERNAME:-turnuser}
      - TURN_PASSWORD=${TURN_PASSWORD:-turnpass}
      - TURN_REALM=${TURN_REALM:-tgcall.us}
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network

  # Nginx (существующая конфигурация)
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_HTTP_PORT:-8080}:80"
      - "${NGINX_HTTPS_PORT:-8443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/snippets:/etc/nginx/snippets
      - ./nginx/fastcgi.conf:/etc/nginx/fastcgi.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - api
      - signal
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
