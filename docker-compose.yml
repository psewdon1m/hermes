services:
  caddy:
    image: callstack-caddy
    build:
      context: .
      dockerfile: ./caddy/Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  coturn:
    image: coturn/coturn:latest
    restart: unless-stopped
    network_mode: host
    user: "0"
    environment:
      - TURN_SECRET=${TURN_SECRET}
    command: >
      sh -lc "
      set -e;
      mkdir -p /var/lib/coturn/tls;
      cp -f /tls/call.tgcall.us.crt /var/lib/coturn/tls/cert.crt;
      cp -f /tls/call.tgcall.us.key /var/lib/coturn/tls/key.key;
      chmod 0644 /var/lib/coturn/tls/cert.crt /var/lib/coturn/tls/key.key;
      exec turnserver -c /etc/turnserver.conf --static-auth-secret=\"${TURN_SECRET}\"
      "
    volumes:
      - ./infra/turnserver.conf:/etc/turnserver.conf:ro
      - /var/lib/docker/volumes/callstack_caddy_data/_data/caddy/certificates/acme-v02.api.letsencrypt.org-directory/call.tgcall.us:/tls:ro

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  api:
    build: ./services/api
    restart: unless-stopped
    environment:
      - DOMAIN=call.tgcall.us
      - API_ORIGIN=https://call.tgcall.us
      - WS_PUBLIC=wss://call.tgcall.us/ws
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - TURN_DOMAIN=call.tgcall.us
      - TURN_SECRET=${TURN_SECRET}
      - TURN_TTL_SECONDS=600
    depends_on:
      - redis

  signal:
    build: ./services/signal
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis

volumes:
  caddy_data:
  caddy_config:
