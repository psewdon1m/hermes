services:
  caddy:
    depends_on:
      - api
      - signal
    image: hermes-caddy
    build:
      context: .
      dockerfile: ./caddy/Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      SERVER_NAME: ${SERVER_NAME}
      SSL_CERT_PATH: /etc/caddy/certs/fullchain.pem
      SSL_KEY_PATH: /etc/caddy/certs/privkey.pem
    volumes:
      - ${SSL_CERT_HOST_PATH}:/etc/caddy/certs/fullchain.pem:ro
      - ${SSL_KEY_HOST_PATH}:/etc/caddy/certs/privkey.pem:ro

  coturn:
    image: coturn/coturn:latest
    restart: unless-stopped
    network_mode: host
    user: "0"
    environment:
      - TURN_SECRET=${TURN_SECRET}
    command: >
      sh -lc "
      set -e;
      mkdir -p /var/lib/coturn/tls;
      cp -f /tls/fullchain.pem /var/lib/coturn/tls/cert.crt;
      cp -f /tls/privkey.pem /var/lib/coturn/tls/key.key;
      chmod 0644 /var/lib/coturn/tls/cert.crt /var/lib/coturn/tls/key.key;
      exec turnserver -c /etc/turnserver.conf --static-auth-secret=\"${TURN_SECRET}\"
      "
    volumes:
      - ./coturn/turnserver.conf:/etc/turnserver.conf:ro
      - ${SSL_CERT_HOST_PATH}:/tls/fullchain.pem:ro
      - ${SSL_KEY_HOST_PATH}:/tls/privkey.pem:ro

  redis:
    build: ./redis
    restart: unless-stopped

  api:
    build: ./api
    restart: unless-stopped
    environment:
      - DOMAIN=${SERVER_NAME}
      - API_ORIGIN=https://${SERVER_NAME}
      - WS_PUBLIC=wss://${SERVER_NAME}/ws
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - TURN_DOMAIN=${SERVER_NAME}
      - TURN_SECRET=${TURN_SECRET}
      - TURN_TTL_SECONDS=600
    depends_on:
      - redis

  signal:
    build: ./signal
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis

  logger:
    build: ./logger
    depends_on:
      - redis
    environment:
      REDIS_URL: redis://redis:6379
      LOGGER_CALL_FILTER: ${LOGGER_CALL_FILTER}
      LOGGER_INCLUDE_DETAIL: ${LOGGER_INCLUDE_DETAIL}
      LOGGER_FILE_PATH: /var/log/calls/observer.log
    volumes:
      - ./log-output:/var/log/calls
    restart: unless-stopped

  bot:
    build: ./bot
    restart: unless-stopped
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - CALL_API_BASE=${CALL_API_BASE}
    depends_on:
      - api
    volumes:
      - ./bot:/app

volumes: {}






